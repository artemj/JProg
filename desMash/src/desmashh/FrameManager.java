/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package desmashh;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import static desmashh.WorkDB.ConnectDB;
import static desmashh.WorkDB.SelectTable;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Artem
 */
public class FrameManager extends javax.swing.JFrame {

    /**
     * Creates new form JFrame1
     */
    public FrameManager() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        addNewRow = new javax.swing.JButton();
        newOrder = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        exit.setText("Закрыть");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Название", "Количество"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        addNewRow.setText("Добавить");
        addNewRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewRowActionPerformed(evt);
            }
        });

        newOrder.setText("Отправить заказ");
        newOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        newOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newOrderActionPerformed(evt);
            }
        });

        jButton1.setText("Назад");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addNewRow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exit)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addNewRow)
                        .addComponent(newOrder))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(exit)
                        .addComponent(jButton1)))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_exitActionPerformed

    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
    /*выводим в табличке все что есть в БД*/
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); 
        String sql = SelectTable("ListDetails");
        try (Connection con = ConnectDB()) {
            try(java.sql.Statement st = con.createStatement();
                    ResultSet res = st.executeQuery(sql)){
                while (res.next()){
                    String d1 = res.getString(2);
                    String d2 = res.getString(3);
                    model.addRow(new Object [] {d1,d2}); 
                }
            }
            con.close(); 
        }
        catch(SQLException | ClassNotFoundException e){
            e.printStackTrace();
        }
// TODO add your handling code here:
         
// TODO add your handling code here:
    }//GEN-LAST:event_jTable1AncestorAdded

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    }//GEN-LAST:event_jTable1MouseClicked

    private void addNewRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewRowActionPerformed
        /*Добавляем новую строку*/
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); 
        String a = "";
        int d = 0;
        model.addRow(new Object [] {a,d});
    }//GEN-LAST:event_addNewRowActionPerformed

    private void newOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newOrderActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int countRow = model.getRowCount(); //количество строк
        java.util.Date a =java.util.Calendar.getInstance().getTime();//текущая дата и время
        SimpleDateFormat formatDate = new SimpleDateFormat("dd.MM-hh:mm");//формат вывода даты
        String date = formatDate.format(a);
        for(int i=0; i<countRow; i++){
            if(model.getValueAt(i, 1).equals(Integer.toString(0))){ //сравниваем с 0 каждый второй элемент            
        } else {
                String name = model.getValueAt(i, 0).toString();
                String quantity = model.getValueAt(i, 1).toString();
                try (Connection con = ConnectDB()){
                    PreparedStatement ps;
                    ps = con.prepareStatement("INSERT INTO `desMash`.`Orders` "
                        + "(`Date`, `Name`, `Quantity`) "
                        + "VALUES (?, ?, ?);");
                    ps.setString(1, date);
                    ps.setString(2, name);
                    ps.setString(3, quantity);
                    ps.executeUpdate();
                    ps.close();
                } catch (ClassNotFoundException | SQLException ex) {
                     ex.printStackTrace();
                }                
            }
        }
        try (Connection con = ConnectDB()){
            PreparedStatement ps;
            ps = con.prepareStatement("INSERT INTO `desMash`.`ListOrders` "
                    + "(`id`, `Date`) VALUES (NULL, ?);");
            ps.setString(1, date);
            ps.executeUpdate();
            ps.close();
        } catch (ClassNotFoundException | SQLException ex) {
            ex.printStackTrace();
        }
        JOptionPane.showMessageDialog(this, "Заказ отправлен " + date);
    }//GEN-LAST:event_newOrderActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new FrameHead().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewRow;
    private javax.swing.JButton exit;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton newOrder;
    // End of variables declaration//GEN-END:variables

}
